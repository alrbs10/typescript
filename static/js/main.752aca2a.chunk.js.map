{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Coin.tsx","atoms.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["Base_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","coin","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","data","type","series","map","price","x","time_open","y","open","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","Container","styled","div","Header","header","Title","h1","props","accentColor","Overview","tabColor","OverviewItem","Description","p","Tabs","Tab","span","isActive","textColor","GoBack","button","PriceContainer","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","history","useHistory","infoLoading","infoData","tickersLoading","tickerData","console","log","loading","name","rank","symbol","open_source","description","total_supply","max_supply","to","path","quotes","USD","market_cap","toLocaleString","ath_date","slice","ath_price","toFixed","market_cap_change_24h","percent_from_price_ath","onClick","push","isDarkAtom","atom","key","default","CoinsList","ul","li","Img","img","Toggle","reverseAccentColor","reverseTabColor","Coins","setterFn","useSetRecoilState","prev","pathname","id","src","toLowerCase","Router","Darktheme","bgColor","Lighttheme","GlobalStyle","createGlobalStyle","App","isDark","useRecoilValue","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.752aca2a.chunk.js","sourcesContent":["const Base_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${Base_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coin: string) {\r\n  return fetch(`${Base_URL}/coins/${coin}`).then((response) => response.json());\r\n}\r\nexport function fetchCoinTickers(coin: string) {\r\n  return fetch(`${Base_URL}/tickers/${coin}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function fetchCoinHistory(coin: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${Base_URL}/coins/${coin}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: data?.map((price) => {\r\n                return {\r\n                  x: price.time_open,\r\n                  y: [price.open, price.high, price.low, price.close],\r\n                };\r\n              }),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: true },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: true },\r\n              axisTicks: { show: true },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\ninterface Params {\r\n  coinId: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 48px;\r\n`;\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface IInfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  contracts: object;\r\n  parent: object;\r\n  tags: object;\r\n  team: object;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  links: object;\r\n  links_extended: object;\r\n  whitepaper: object;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.tabColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props) => props.theme.tabColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\nconst GoBack = styled.button`\r\n  background-color: ${(props) => props.theme.tabColor};\r\n  border: 0;\r\n  border-radius: 10px;\r\n  color: ${(props) => props.theme.textColor};\r\n  padding: 10px;\r\n  &:hover {\r\n    color: ${(props) => props.theme.accentColor};\r\n  }\r\n`;\r\nconst PriceContainer = styled.div`\r\n  padding: 20px;\r\n  background-color: ${(props) => props.theme.tabColor};\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  line-height: 1.5;\r\n`;\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<Params>();\r\n  //const [loading, setLoading] = useState(true);\r\n  const { state } = useLocation<RouteState>();\r\n  //const [info, setInfo] = useState<IInfoData>();\r\n  //const [priceInfo, setPriceInfo] = useState<IPriceData>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const history = useHistory();\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickerData } = useQuery<IPriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  console.log(tickerData);\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Open Source:</span>\r\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickerData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickerData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              {/* Price /> */}\r\n              <PriceContainer>\r\n                <p>\r\n                  Market Cap: $\r\n                  {tickerData?.quotes?.USD.market_cap.toLocaleString(\"en\")}\r\n                </p>\r\n                <p>\r\n                  Date(ath) : {tickerData?.quotes?.USD.ath_date.slice(0, 10)}\r\n                </p>\r\n                <p>\r\n                  Price(ath) : ${tickerData?.quotes?.USD.ath_price.toFixed(3)}\r\n                </p>\r\n                <p>\r\n                  Market Change (24h) :{\" \"}\r\n                  {tickerData?.quotes?.USD.market_cap_change_24h}\r\n                </p>\r\n                <p>\r\n                  Market Change(ath):\r\n                  {tickerData?.quotes?.USD.percent_from_price_ath}\r\n                </p>\r\n              </PriceContainer>\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n          <GoBack onClick={() => history.push(\"/typescript\")}> ← BACK</GoBack>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: true,\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.tabColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n  a {\r\n    padding: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\nconst Img = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoinsProps {}\r\n\r\nconst Toggle = styled.div`\r\n  background-color: ${(props) => props.theme.tabColor};\r\n  padding: 15px 20px;\r\n  border-radius: 10px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  color: ${(props) => props.theme.textColor};\r\n  transition: 0.4s;\r\n  &:hover {\r\n    color: ${(props) => props.theme.reverseAccentColor};\r\n    background-color: ${(props) => props.theme.reverseTabColor};\r\n  }\r\n`;\r\nfunction Coins({}: ICoinsProps) {\r\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\r\n  const setterFn = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => {\r\n    setterFn((prev) => !prev);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>코인</Title>\r\n        <Toggle onClick={toggleDarkAtom}>Change Mode</Toggle>\r\n      </Header>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\ninterface IRouterProps {}\r\nfunction Router({}: IRouterProps) {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/typescript\">\r\n          <Coins />\r\n        </Route>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const Darktheme: DefaultTheme = {\r\n  bgColor: \"#222f3e\",\r\n  textColor: \"#c8d6e5\",\r\n  accentColor: \"#686de0\",\r\n  tabColor: \"#57606f\",\r\n  reverseTabColor: \"#f8c291\",\r\n  reverseAccentColor: \"#079992\",\r\n};\r\n\r\nexport const Lighttheme: DefaultTheme = {\r\n  bgColor: \"#f1f2f6\",\r\n  textColor: \"#2f3542\",\r\n  accentColor: \"#079992\",\r\n  tabColor: \"#f8c291\",\r\n  reverseTabColor: \"#57606f\",\r\n  reverseAccentColor: \"#686de0\",\r\n};\r\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { Darktheme, Lighttheme } from \"./theme\";\r\nimport { useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./atoms\";\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Source+Sans+Pro:wght@300;400&display=swap');\r\n  html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor}\r\n}\r\na{\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n`;\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? Darktheme : Lighttheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}